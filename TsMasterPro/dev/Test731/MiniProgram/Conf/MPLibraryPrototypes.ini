[programmable_filter]
=s32 filter_can_frame(const PCANFD ACAN);
=s32 filter_lin_frame(const PLIN ALIN);
=s32 filter_flexray_frame(const PFlexRay AFlexRay);
=s32 filter_ethernet_frame(const PEthernetHeader AEthernet);
[crc]
=s32 CRC4_ITU(pu8 data, s32 datalen);
=s32 CRC5_EPC(pu8 data, s32 datalen);
=s32 CRC5_USB(pu8 data, s32 datalen);
=s32 CRC5_ITU(pu8 data, s32 datalen);
=s32 CRC6_ITU(pu8 data, s32 datalen);
=s32 CRC7_MMC(pu8 data, s32 datalen);
=s32 CRC8(pu8 data, s32 datalen);
=s32 CRC8_ITU(pu8 data, s32 datalen);
=s32 CRC8_ROHC(pu8 data, s32 datalen);
=s32 CRC8_MAXIM(pu8 data, s32 datalen);
=s32 CRC16_CCITT(pu8 data, s32 datalen);
=s32 CRC16_CCITT_FALSE(pu8 data, s32 datalen);
=s32 CRC16_XMODEM(pu8 data, s32 datalen);
=s32 CRC16_X25(pu8 data, s32 datalen);
=s32 CRC16_MODBUS(pu8 data, s32 datalen);
=s32 CRC16_IBM(pu8 data, s32 datalen);
=s32 CRC16_MAXIM(pu8 data, s32 datalen);
=s32 CRC16_USB(pu8 data, s32 datalen);
=s32 CRC16_DNP(pu8 data, s32 datalen);
=s32 CRC32(pu8 data, s32 datalen);
=s32 CRC32_MPEG(pu8 data, s32 datalen);
